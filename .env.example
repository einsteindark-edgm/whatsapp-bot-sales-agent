# WhatsApp Sales Assistant - Environment Variables Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# CRITICAL: API Keys
# =============================================================================

# Gemini API Key (Required)
# Get your API key from: https://aistudio.google.com/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# Service Configuration
# =============================================================================

# Orchestrator Service
ORCHESTRATOR_HOST=localhost
ORCHESTRATOR_PORT=8080

# Classifier Service
CLASSIFIER_HOST=localhost
CLASSIFIER_PORT=8081

# CLI Configuration
CLI_HOST=localhost

# =============================================================================
# Docker Configuration
# =============================================================================

# Docker Network Name
DOCKER_NETWORK=whatsapp-assistant-network

# Set to 'true' when running in Docker containers
DOCKER_CONTAINER=false

# =============================================================================
# Model Configuration
# =============================================================================

# Gemini Model Name (Use full identifier)
MODEL_NAME=google-gla:gemini-2.0-flash

# =============================================================================
# Observability & Logging
# =============================================================================

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable/Disable Tracing
TRACE_ENABLED=true

# =============================================================================
# Enhanced Observability (Optional)
# =============================================================================

# Logfire Configuration (Optional - for enhanced observability)
# Get your token from: https://logfire.pydantic.dev/
LOGFIRE_TOKEN=""
LOGFIRE_PROJECT_NAME="whatsapp-sales-assistant"
LOGFIRE_ENVIRONMENT="development"

# Arize AX Configuration (Optional - for LLM monitoring and evaluation)
# Get your credentials from: https://app.arize.com/
ARIZE_API_KEY="ak-cfac8a4f-f8e2-43cc-b62d-5a5f11386eea-Fcg6kFmuCebUbh9PNKZLZ8It1tybG6pM"
ARIZE_SPACE_KEY="U3BhY2U6MjM3ODM6bTdMdg=="
ARIZE_MODEL_ID="whatsapp-bot-agent"
ARIZE_MODEL_VERSION="1.0.0"

# OpenTelemetry Configuration (Optional - for distributed tracing)
OTEL_SERVICE_NAME="whatsapp-sales-assistant"
OTEL_EXPORTER_ENDPOINT=""
OTEL_HEADERS=""

# =============================================================================
# API Configuration
# =============================================================================

# API Metadata
API_TITLE=WhatsApp Sales Assistant
API_VERSION=1.0.0

# =============================================================================
# Development Configuration
# =============================================================================

# Set to 'true' for development mode
DEV_MODE=false

# Database URL (if needed for future extensions)
# DATABASE_URL=postgresql://user:password@localhost:5432/whatsapp_assistant

# =============================================================================
# Performance Configuration
# =============================================================================

# HTTP Request Timeouts (seconds)
HTTP_TIMEOUT=30
HTTP_RETRIES=3

# A2A Protocol Configuration
A2A_TIMEOUT=30
A2A_RETRIES=3

# =============================================================================
# Classification Configuration
# =============================================================================

# Minimum confidence threshold for classification
CONFIDENCE_THRESHOLD=0.7

# Gemini Temperature (0.0 for consistent classification)
GEMINI_TEMPERATURE=0.0

# Maximum tokens for classification response
GEMINI_MAX_TOKENS=100

# =============================================================================
# CLI Configuration
# =============================================================================

# Spinner animation configuration
SPINNER_DELAY=0.1
SPINNER_CHARS=|/-\\

# =============================================================================
# Security Configuration
# =============================================================================

# Set to 'true' in production
PRODUCTION=false

# API Key validation (set to 'true' to enable strict validation)
STRICT_API_KEY_VALIDATION=true

# =============================================================================
# Notes
# =============================================================================

# 1. GEMINI_API_KEY is required - get it from https://aistudio.google.com/apikey
# 2. For Docker deployment, set DOCKER_CONTAINER=true
# 3. For production, set PRODUCTION=true and LOG_LEVEL=WARNING
# 4. Keep this file secure and never commit it to version control
# 5. The classifier and orchestrator services must be able to reach each other
# 6. Default ports: Orchestrator=8080, Classifier=8081
# 7. For local development, keep all hosts as 'localhost'
# 8. For Docker deployment, use service names as hosts