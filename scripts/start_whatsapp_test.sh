#!/bin/bash
# Script para iniciar todos los servicios para prueba de WhatsApp

echo "üöÄ Iniciando servicios para prueba de WhatsApp..."

# Verificar que existe .env
if [ ! -f .env ]; then
    echo "‚ùå Error: No se encontr√≥ archivo .env"
    echo "Por favor copia .env.example a .env y configura las credenciales"
    exit 1
fi

# Verificar credenciales WhatsApp
source .env
if [ -z "$WHATSAPP_ACCESS_TOKEN" ] || [ "$WHATSAPP_ACCESS_TOKEN" = "your_permanent_access_token_here" ]; then
    echo "‚ùå Error: WHATSAPP_ACCESS_TOKEN no est√° configurado en .env"
    exit 1
fi

# Funci√≥n para matar procesos al salir
cleanup() {
    echo "üõë Deteniendo servicios..."
    kill $CLASSIFIER_PID $ORCHESTRATOR_PID 2>/dev/null
    exit
}
trap cleanup EXIT

# Iniciar classifier
echo "1Ô∏è‚É£ Iniciando Classifier en puerto 8001..."
python3 -m uvicorn agents.classifier.main:app --host 0.0.0.0 --port 8001 &
CLASSIFIER_PID=$!
sleep 3

# Iniciar orchestrator
echo "2Ô∏è‚É£ Iniciando Orchestrator en puerto 8000..."
python3 -m uvicorn agents.orchestrator.main:app --host 0.0.0.0 --port 8000 &
ORCHESTRATOR_PID=$!
sleep 3

# Verificar servicios
echo "3Ô∏è‚É£ Verificando servicios..."
curl -s http://localhost:8001/health > /dev/null && echo "‚úÖ Classifier OK" || echo "‚ùå Classifier FAILED"
curl -s http://localhost:8000/health > /dev/null && echo "‚úÖ Orchestrator OK" || echo "‚ùå Orchestrator FAILED"

echo ""
echo "üì± Servicios iniciados!"
echo ""
echo "Pr√≥ximos pasos:"
echo "1. En otra terminal ejecuta: ngrok http 8000"
echo "2. Copia la URL HTTPS de ngrok"
echo "3. Configura el webhook en Meta Developer Console:"
echo "   - URL: https://TU-NGROK-ID.ngrok-free.app/webhook/whatsapp"
echo "   - Token: $WHATSAPP_WEBHOOK_VERIFY_TOKEN"
echo ""
echo "üìä Logs activos. Presiona Ctrl+C para detener..."

# Mantener el script corriendo
wait